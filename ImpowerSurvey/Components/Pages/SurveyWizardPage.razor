@page "/take-survey/{SurveyId:guid}"
@using ImpowerSurvey.Components.Controls
@using ImpowerSurvey.Components.Model
@using ImpowerSurvey.Components.Utilities
@using ImpowerSurvey.Services

@inject IJSUtilityService JSUtilityService
@inject DialogService DialogService
@inject SurveyService SurveyService
@inject NavigationManager NavigationManager
@inject NotificationService NotificationService
@inject AuthenticationStateProvider AuthStateProvider
@inject ISettingsService SettingsService

<PageTitle>@nameof(ImpowerSurvey)</PageTitle>

<CascadingAuthenticationState>
    <AuthorizeView Roles="@nameof(Roles.SurveyParticipant)">
        <NotAuthorized>
            <NotAuthorizedControl LogError="false" WizardController="@Wizard?.Controller"/>
        </NotAuthorized>
        <Authorized>
            @if (Survey == null)
            {
                <div class="survey-container">
                    <div class="question-card" style="display: flex; justify-content: center; padding: 4rem;">
                        <RadzenProgressBarCircular Mode="ProgressBarMode.Indeterminate" ShowValue="false"/>
                    </div>
                </div>
            }
            else
            {
                <div class="glass-card" style="max-width: 1000px;">
                    <div class="survey-container d-flex flex-column">
                        @if (CurrentPageIndex == 0)
                        {
                            <div class="welcome-container">
                                <RadzenText TextStyle="TextStyle.H4">Welcome to ImpowerSurvey</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1">
                                    Thank you for participating in this survey. Before you begin, we want to introduce you to SHIELD, an innovative privacy principle
                                    developed by Impower.AI. Your privacy is our utmost concern, and SHIELD is how we ensure it.
                                </RadzenText>

                                <ShieldPopup/>

                                <div class="survey-intro-container">
                                    <RadzenText TextStyle="TextStyle.H5" class="intro-heading">You are about to take the survey:</RadzenText>
                                    <div class="glass-card" style="padding: 1rem;">
                                        <RadzenText TextStyle="TextStyle.H3" class="survey-title">@Survey.Title</RadzenText>
                                        <div class="survey-description">@Survey.Description</div>
                                        <RadzenAlert AlertStyle="AlertStyle.Info" Size="AlertSize.Small" Variant="Variant.Filled" ShowIcon="true" AllowClose="false" Style="margin-top: 1rem;">
                                            Survey ID: <strong>@Survey.Id.ToHumanReadableId()</strong>
                                            <p style="margin-top: 0.5rem; margin-bottom: 0;">@string.Format(Constants.Survey.SurveyIdAlert, Survey.Id.ToHumanReadableId())</p>
                                        </RadzenAlert>
                                    </div>
                                </div>

                                <div class="navigation-buttons mt-auto">
                                    <RadzenButton ButtonStyle="ButtonStyle.Light" Click="@(() => NavigateToPage(Survey.Questions.Count + 1))"
                                                  Size="ButtonSize.Medium" Icon="skip_next" Text="Skip to Submit" class="nav-btn" Variant="Variant.Outlined"/>

                                    <RadzenButton ButtonStyle="ButtonStyle.Success" Click="@(() => NavigateToPage(1))"
                                                  Size="ButtonSize.Medium" Icon="play_arrow" Text="Start Survey" class="nav-btn"/>
                                </div>
                            </div>
                        }
                        else if (CurrentPageIndex > 0 && CurrentPageIndex <= Survey.Questions.Count) // Question Pages
                        {
                            var question = Survey.Questions[CurrentPageIndex - 1];

                            <div class="progress-indicator">
                                <RadzenProgressBar Value="@((double)CurrentPageIndex / (Survey.Questions.Count + 1) * 100)"
                                                   ShowValue="false" Style="height: 6px;"/>
                            </div>

                            <div class="step-indicator">
                                <RadzenIcon Icon="help"/>
                                <div class="step-text">Question @CurrentPageIndex of @Survey.Questions.Count</div>
                            </div>

                            <div class="question-content flex-grow-1 d-flex flex-column">
                                <div class="question-title">@question.Text</div>

                                <div class="question-response flex-grow-1 d-flex flex-column">
                                    <div class="scrollable-options">
                                        @switch (question.Type)
                                        {
                                            case QuestionTypes.Text:
                                                <RadzenTextArea @bind-Value="@Wizard.Controller.Responses[question.Id]"
                                                                Style="width: 100%; min-height: 120px;"
                                                                Rows="4"
                                                                Placeholder="Enter your response here..."/>
                                                <RadzenAlert AlertStyle="AlertStyle.Light" Size="AlertSize.Small" Variant="Variant.Outlined" Icon="robot_2" AllowClose="false">
                                                    @(ClaudeEnabled ? Constants.AI.AnonymizationEnabledMessage : Constants.AI.AnonymizationDisabledMessage)
                                                </RadzenAlert>
                                                break;

                                            case QuestionTypes.Rating:
                                                <div class="rating-container">
                                                    <ImpowerRating @bind-Value="@Wizard.Controller.RatingResponses[question.Id]" Stars="5" ReadOnly="false"/>
                                                    @if (ShowRequired)
                                                    {
                                                        <RadzenText TextStyle="TextStyle.Caption" Style="color: var(--rz-danger); margin-top: 0.5rem;">
                                                            This field is required
                                                        </RadzenText>
                                                    }
                                                </div>
                                                break;

                                            case QuestionTypes.SingleChoice:
                                                <ImpowerChoices
                                                    Options="@question.Options"
                                                    IsMultiple="false"
                                                    @bind-SelectedValue="@Wizard.Controller.SingleChoiceResponses[question.Id]"
                                                    ReadOnly="false"/>
                                                break;

                                            case QuestionTypes.MultipleChoice:
                                                <ImpowerChoices
                                                    Options="@question.Options"
                                                    IsMultiple="true"
                                                    @bind-SelectedValues="@Wizard.Controller.MultipleChoiceResponses[question.Id]"
                                                    ReadOnly="false"/>
                                                break;
                                        }
                                    </div>
                                </div>

                                <div class="navigation-buttons mt-auto">
                                    <RadzenButton Text="Previous" Icon="arrow_back" Click="@(() => Wizard.Controller.PreviousPage())"
                                                  ButtonStyle="ButtonStyle.Light" class="nav-btn" Disabled="CurrentPageIndex == 0"/>

                                    <RadzenButton Text="Next" Icon="arrow_forward" Click="@(() => Wizard.Controller.NextPage())"
                                                  ButtonStyle="ButtonStyle.Primary" class="nav-btn"/>
                                </div>
                            </div>
                        }
                        else if (CurrentPageIndex == Survey.Questions.Count + 1) // Submit Page
                        {
                            
                            <div class="progress-indicator">
                                <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Determinate" Style="height: 6px;"/>
                            </div>

                            <div class="step-indicator">
                                <RadzenIcon Icon="done_all"/>
                                <div class="step-text">Final Step: Submit Survey</div>
                            </div>
                            <div class="question-content flex-grow-1 d-flex flex-column">
                            <div class="flex-grow-1 d-flex flex-column">
                                <div style="display: flex; align-items: flex-start; gap: 2rem; margin-bottom: 1.5rem;">
                                    <div style="flex: 3;">
                                        <RadzenText TextStyle="TextStyle.H4">Thank you for participating!</RadzenText>
                                        <RadzenText TextStyle="TextStyle.Body1">
                                            Please read this short note about our privacy measures before submitting.
                                        </RadzenText>
                                    </div>
                                    <div style="flex: 1;">
                                        <ShieldControl/>
                                    </div>
                                </div>

                                <ShieldAccordion ShowSlack="@(Survey.ParticipationType == ParticipationTypes.Slack)"/>
                            </div>

                            @if (CompletionCode == null)
                            {
                                <div class="navigation-buttons mt-auto">
                                    <RadzenButton Text="Back to Survey" Icon="arrow_back" Click="@(() => NavigateToPage(Survey.Questions.Count))"
                                                  ButtonStyle="ButtonStyle.Light" Variant="Variant.Outlined" class="nav-btn"/>

                                    <RadzenButton Text="Submit Survey" Icon="send" Click="@SubmitSurvey" IsBusy="@IsBusy" BusyText="@BusyText"
                                                  ButtonStyle="ButtonStyle.Success" class="nav-btn"/>
                                </div>
                            }
                            else
                            {
                                <CompletionCodeDisplay CompletionCode="@CompletionCode" IsMobile="false"/>
                            }
                            </div>
                        }
                    </div>
                </div>
            }
        </Authorized>
    </AuthorizeView>
</CascadingAuthenticationState>

<style>
    .survey-container {
        margin: 0 auto;
        position: relative;
    }
    
    /* Flexbox helper classes */
    .d-flex {
        display: flex;
    }
    
    .flex-column {
        flex-direction: column;
    }
    
    .flex-grow-1 {
        flex-grow: 1;
    }
    
    .mt-auto {
        margin-top: auto;
    }

    .question-card {
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
        border-radius: 12px;
        padding: 2rem;
        background: var(--rz-card-background-color);
        margin-bottom: 1rem;
    }

    .welcome-container {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
        flex-grow: 1;
        min-height: 300px;
    }

    .navigation-buttons {
        display: flex;
        justify-content: space-between;
        margin-top: 2rem;
    }

    .question-content {
        display: flex;
        flex-direction: column;
        min-height: 300px;
        gap: 1rem;
    }
    
    .question-response {
        justify-content: center;
        padding: 1rem 0;
    }
    
    .scrollable-options {
        overflow-y: auto;
        height: 300px;
        padding-right: 10px;
        margin-bottom: 10px;
    }

    .question-title {
        font-size: 1.25rem;
        font-weight: 500;
        margin-bottom: 1.5rem;
        color: var(--rz-text-title-color);
    }

    .nav-btn {
        min-width: 130px;
    }

    .progress-indicator {
        margin-bottom: 1.5rem;
        width: 100%;
    }
    
    .survey-intro-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        margin-bottom: 1rem;
    }
    
    .intro-heading {
        color: var(--rz-text-title-color);
        margin-bottom: 0.5rem;
    }
    
    .survey-title-card {
        background: linear-gradient(145deg, var(--rz-primary-lighter) 0%, rgba(9,106,242,0.05) 100%);
        border-radius: 12px;
        padding: 1.5rem 2rem;
        border-left: 4px solid var(--rz-primary);
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
        transition: all 0.3s ease;
    }
    
    .survey-title {
        color: var(--rz-primary-light);
        font-weight: 600;
        margin-bottom: 1rem;
    }
    
    .survey-description {
        font-size: 1.1rem;
        color: var(--rz-text-color);
        line-height: 1.6;
        opacity: 0.9;
    }
</style>